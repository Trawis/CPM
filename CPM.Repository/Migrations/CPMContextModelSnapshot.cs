// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace CPM.Repository.Migrations
{
	[DbContext(typeof(CPMContext))]
    partial class CPMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("CPM.Model.Car.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Color");

                    b.Property<string>("Name");

                    b.Property<string>("Plates");

                    b.Property<int>("SeatsNumber");

                    b.Property<string>("Type");

                    b.HasKey("CarId");

                    b.HasIndex("Plates")
                        .IsUnique();

                    b.ToTable("Car");
                });

            modelBuilder.Entity("CPM.Model.Employee.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDriver");

                    b.Property<string>("Name");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CPM.Model.TravelPlan.TravelPlan", b =>
                {
                    b.Property<int>("TravelPlanId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CarId");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("EndLocation");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("StartLocation");

                    b.HasKey("TravelPlanId");

                    b.HasIndex("CarId");

                    b.ToTable("TravelPlan");
                });

            modelBuilder.Entity("CPM.Model.TravelPlanEmployee.TravelPlanEmployee", b =>
                {
                    b.Property<int>("TravelPlanId");

                    b.Property<int>("EmployeeId");

                    b.HasKey("TravelPlanId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("TravelPlanEmployee");
                });

            modelBuilder.Entity("CPM.Model.TravelPlan.TravelPlan", b =>
                {
                    b.HasOne("CPM.Model.Car.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CPM.Model.TravelPlanEmployee.TravelPlanEmployee", b =>
                {
                    b.HasOne("CPM.Model.Employee.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CPM.Model.TravelPlan.TravelPlan", "TravelPlan")
                        .WithMany("TravelPlanEmployees")
                        .HasForeignKey("TravelPlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
